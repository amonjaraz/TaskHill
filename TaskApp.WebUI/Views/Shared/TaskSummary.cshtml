@model TaskApp.Domain.Entities.TaskItem

<div class="well">
    <p>Desc: @Model.Description</p>
    <p>ID: @Model.TaskItemId</p>
    <p>Time: @Model.Time</p>
    <p>Level: @Model.Level</p>
    <p>Parent Id: @Model.ParentId</p>
    @{
        string TimerId = "TimerDisplay" + @Model.TaskItemId.ToString();
        int taskItemId = Model.TaskItemId;
        int taskTime = Model.Time;
        
    }
    @using (Html.BeginForm("List", "DashBoard"))
    {
        <div>
            <p>@Model.TaskItemId</p>
            @Html.Hidden("TaskItemId", taskItemId);

           @* @Html.TextBox("Time", (object)taskTime , new { @id = TimerId })   This causes some an error described here; https://blogs.msdn.microsoft.com/simonince/2010/05/05/asp-net-mvcs-html-helpers-render-the-wrong-value/*@
            <input type="hidden" name="ParentId" value="@Model.ParentId" id="ParentId" />
            <input type="text" name="Description" value="@Model.Description" id="Description" />
            <input type="text" name="Time" value="@Model.Time" id="@TimerId" />

            <input type="submit" value="Save" />
        </div>

    }

    @using (Html.BeginForm("Delete", "DashBoard"))
    {
        @Html.Hidden("TaskItemId", taskItemId);
        <input type="submit" value="Delete" />
    }

        <button onclick="@String.Format("StartTimer('{0}',{1})",TimerId,Model.Time )">Start</button>
        <button onclick="StopTimer()">Stop</button>
</div>