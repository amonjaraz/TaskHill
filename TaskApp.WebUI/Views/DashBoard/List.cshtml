@using TaskApp.Domain.Entities
@using TaskApp.Domain.Concrete
@model IEnumerable<TaskItem>
@{
    ViewBag.Title = "List";
}

<head>
    <link href="~/Scripts/countdown.js" />
</head>
<h2>List</h2>

<script>
        var time = 0;
        var interval = 0;
        var _hiddenTimerElementId;
        var _visibleTimerElementId;

        function StartTimer(hiddenElementId,visibleElementId, timeInit) {
                StopTimer();
                time = timeInit;
                _hiddenTimerElementId = hiddenElementId;
                _visibleTimerElementId = visibleElementId;
                interval = setInterval(function () { IncrementTime() }, 1000);
            }

            function IncrementTime() {
                time = time + 1;
                UpdateTimerDisplay();
            }

            function UpdateTimerDisplay() {

                document.getElementById(_hiddenTimerElementId).value = time;
                document.getElementById(_visibleTimerElementId).innerText = time;
            }

            function StopTimer() {
                clearInterval(interval);
            }
</script>

@Html.ValidationSummary()
<table class="table table-striped table-condensed table-bordered">
    <tr>
        <th class="text-left">Description</th>
        <th class="text-center">Time</th>
        <th></th>
        <th></th>
        <th></th>
    </tr>
    @foreach (var task in Model)
    {
        <tr>
            @Html.Partial("TaskSummary", task)
        </tr>
    }
</table>

@Html.ActionLink("Add Task","AddTaskItem")